name: Run Unit Tests and Build

on:
  pull_request:
    branches:
      - '*'

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - run: npm ci
      - run: npm run test

  build:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY_NAME }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
          REACT_APP_INFURA_PUBLIC_ID: ${{ secrets.REACT_APP_INFURA_PUBLIC_ID }}
          REACT_APP_INFURA_SECRET_KEY: ${{ secrets.REACT_APP_INFURA_SECRET_KEY }}
          REACT_APP_CROSSMINT_CLIENT_ID: ${{ secrets.REACT_APP_CROSSMINT_CLIENT_ID }}

        run: |
          docker build --build-arg REACT_APP_INFURA_PUBLIC_ID=${REACT_APP_INFURA_PUBLIC_ID} --build-arg REACT_APP_INFURA_SECRET_KEY=${REACT_APP_INFURA_SECRET_KEY} --build-arg REACT_APP_CROSSMINT_CLIENT_ID=${REACT_APP_CROSSMINT_CLIENT_ID} -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
